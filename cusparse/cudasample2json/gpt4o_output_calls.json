{"cu_path": "../CUDALibrarySamples/cuSPARSE/sparse2dense_csr/sparse2dense_csr_example.c", "model_response": [{"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE context and initializes the library.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSparseToDense_bufferSize", "head_type": "__host__", "description": "Get the buffer size needed for the SparseToDense conversion.", "relation": "calls", "tail": "cusparseSparseToDense", "tail_type": "CUDA_API"}, {"head": "cusparseSparseToDense", "head_type": "__host__", "description": "Converts a sparse matrix into a dense matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys the sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys the dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Deallocates device memory.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/sddmm_csr_batched/sddmm_csr_batched_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "calls", "tail": "CUDA_R_32F", "tail_type": "CUDA_CLASS"}, {"head": "cusparseDnMatSetStridedBatch", "head_type": "__host__", "description": "Sets strided batch configuration for dense matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix descriptor in CSR format.", "relation": "calls", "tail": "CUSPARSE_INDEX_32I", "tail_type": "CUDA_CLASS"}, {"head": "cusparseCsrSetStridedBatch", "head_type": "__host__", "description": "Sets strided batch configuration for CSR matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSDDMM_bufferSize", "head_type": "__host__", "description": "Computes buffer size needed by cusparseSDDMM.", "relation": "calls", "tail": "CUSPARSE_OPERATION_NON_TRANSPOSE", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSDDMM_preprocess", "head_type": "__host__", "description": "Preprocesses SDDMM computation.", "relation": "calls", "tail": "CUSPARSE_OPERATION_NON_TRANSPOSE", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSDDMM", "head_type": "__host__", "description": "Executes SDDMM computation.", "relation": "calls", "tail": "CUSPARSE_OPERATION_NON_TRANSPOSE", "tail_type": "CUDA_CLASS"}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmm_coo/spmm_coo_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Initializes the cuSPARSE library context.", "relation": "calls", "tail": "cusparseHandle_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseCreateCoo", "head_type": "__host__", "description": "Creates a sparse matrix in COO format.", "relation": "calls", "tail": "cusparseSpMatDescr_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "calls", "tail": "cusparseDnMatDescr_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSpMM_bufferSize", "head_type": "__host__", "description": "Determines the buffer size required for SpMM operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMM", "head_type": "__host__", "description": "Performs sparse matrix representation multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys the sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys the dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmv_coo/spmv_coo_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__global__", "description": "cudaMalloc allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__global__", "description": "cudaMemcpy copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__global__", "description": "cusparseCreate initializes a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCoo", "head_type": "__global__", "description": "cusparseCreateCoo creates a sparse matrix in COO format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__global__", "description": "cusparseCreateDnVec creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMV_bufferSize", "head_type": "__global__", "description": "cusparseSpMV_bufferSize gets the buffer size for SpMV operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMV", "head_type": "__global__", "description": "cusparseSpMV executes a sparse matrix vector multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__global__", "description": "cusparseDestroySpMat destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__global__", "description": "cusparseDestroyDnVec destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__global__", "description": "cusparseDestroy releases the cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__global__", "description": "cudaFree frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spsm_coo/spsm_coo_example.c", "model_response": [{"head": "cusparseSpSM_bufferSize", "head_type": "__host__", "description": "This function calculates the buffer size required for the sparse matrix solve operation.", "relation": "calls", "tail": "cusparseCreate", "tail_type": "CUDA_API"}, {"head": "cusparseSpSM_bufferSize", "head_type": "__host__", "description": "This function calculates the buffer size required for the sparse matrix solve operation.", "relation": "calls", "tail": "cusparseCreateCoo", "tail_type": "CUDA_API"}, {"head": "cusparseSpSM_analysis", "head_type": "__host__", "description": "This function performs the analysis stage of sparse matrix solve operation.", "relation": "calls", "tail": "cusparseSpSM_bufferSize", "tail_type": "CUDA_API"}, {"head": "cusparseSpSM_solve", "head_type": "__host__", "description": "This function executes the sparse matrix solve operation.", "relation": "calls", "tail": "cusparseSpSM_analysis", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/bicgstab/bicgstab_example.c", "model_response": [{"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cusparseSpSV_createDescr", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cusparseSpSV_bufferSize", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cusparseSpSV_analysis", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cusparseSpMV", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cublasDdot", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cublasDnrm2", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cublasDaxpy", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cublasDscal", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cusparseSpSV_solve", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cusparseSpSV_destroyDescr", "tail_type": "CUDA_API"}, {"head": "gpu_BiCGStab", "head_type": "__host__", "description": "BiCGStab method for solving linear systems on GPU.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/sddmm_csr/sddmm_csr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix descriptor in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSDDMM_bufferSize", "head_type": "__host__", "description": "Calculates buffer size for cusparseSDDMM operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSDDMM_preprocess", "head_type": "__host__", "description": "Executes preprocess step for cusparseSDDMM operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSDDMM", "head_type": "__host__", "description": "Performs sample dense-dense matrix multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmm_csr/spmm_csr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMM_bufferSize", "head_type": "__host__", "description": "Computes buffer size needed for SpMM.", "relation": "calls", "tail": "cusparseSpMM", "tail_type": "CUDA_API"}, {"head": "cusparseSpMM_preprocess", "head_type": "__host__", "description": "Pre-processes data for SpMM.", "relation": "calls", "tail": "cusparseSpMM", "tail_type": "CUDA_API"}, {"head": "cusparseSpMM", "head_type": "__host__", "description": "Performs sparse matrix-matrix multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spsm_csr/spsm_csr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSM_createDescr", "head_type": "__host__", "description": "Creates a descriptor for sparse matrix-sparse matrix operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMatSetAttribute", "head_type": "__host__", "description": "Sets an attribute for a sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSM_bufferSize", "head_type": "__host__", "description": "Computes the buffer size required for Sparse Matrix-Sparse Matrix operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSM_analysis", "head_type": "__host__", "description": "Analyzes Sparse Matrix-Sparse Matrix operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSM_solve", "head_type": "__host__", "description": "Executes Sparse Matrix-Sparse Matrix solve operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSM_destroyDescr", "head_type": "__host__", "description": "Destroys a descriptor for Sparse Matrix-Sparse Matrix operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spgemm/spgemm_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies memory between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates the cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_createDescr", "head_type": "__host__", "description": "Creates a descriptor for SpGEMM computation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_workEstimation", "head_type": "__host__", "description": "Estimates the external memory needed for SpGEMM computation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_compute", "head_type": "__host__", "description": "Computes the product of two sparse matrices using SpGEMM.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMatGetSize", "head_type": "__host__", "description": "Retrieves the size properties of a sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCsrSetPointers", "head_type": "__host__", "description": "Sets the CSR pointers for a sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_copy", "head_type": "__host__", "description": "Copies the results from the SpGEMM computation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_destroyDescr", "head_type": "__host__", "description": "Destroys the SpGEMM descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/scatter/scatter_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees the allocated memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__host__", "description": "Creates a sparse vector.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseScatter", "head_type": "__host__", "description": "Executes scatter operation on vectors.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__host__", "description": "Destroys a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/cg/cg_example.c", "model_response": [{"head": "make_laplace_matrix", "head_type": "__host__", "description": "Creates a 5-point time-dependent diffusion matrix with Dirichlet boundary conditions.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpMV", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_createDescr", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_bufferSize", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_analysis", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemset", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_solve", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_createDescr", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_bufferSize", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_analysis", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemset", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_solve", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDnrm2", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDdot", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpMV", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDdot", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDaxpy", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDaxpy", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDnrm2", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemset", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemset", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_solve", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_solve", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDdot", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDscal", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDaxpy", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpMV", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cublasDnrm2", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_destroyDescr", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cusparseSpSV_destroyDescr", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "gpu_CG", "head_type": "__host__", "description": "Performs Conjugate Gradient (CG) computation using cuBLAS and cuSPARSE.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spvv/spvv_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the GPU.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the GPU.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Initializes a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__host__", "description": "Creates a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpVV_bufferSize", "head_type": "__host__", "description": "Computes buffer size for sparse vector and dense vector operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpVV", "head_type": "__host__", "description": "Executes sparse vector and dense vector operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__host__", "description": "Destroys the sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys the dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spgemm_mem/spgemm_mem_example.c", "model_response": [{"head": "cusparseSpGEMM_workEstimation", "head_type": "__host__", "description": "workEstimation for gathering buffer memory size for sparse matrix multiplication estimation.", "relation": "calls", "tail": "cusparseCreate", "tail_type": "CUDA_API"}, {"head": "cusparseSpGEMM_workEstimation", "head_type": "__host__", "description": "workEstimation for gathering buffer memory size for sparse matrix multiplication estimation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_estimateMemory", "head_type": "__host__", "description": "estimateMemory for gathering memory size need for intermediate buffer during sparse matrix multiplication computation.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "cusparseSpGEMM_compute", "head_type": "__host__", "description": "compute for calculating the sparse matrix multiplication.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "cusparseSpGEMM_copy", "head_type": "__host__", "description": "copy back the results of sparse matrix multiplication.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "destroy sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "destroy the cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "free allocated device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMalloc", "head_type": "__host__", "description": "allocate device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "copy data between host and device.", "relation": "calls", "tail": "cudaGetErrorString", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spsv_csr/spsv_csr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaGetErrorString", "head_type": "__host__", "description": "Returns a string pointer that describes the error code.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_createDescr", "head_type": "__host__", "description": "Creates an SpSV opaque data structure.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMatSetAttribute", "head_type": "__host__", "description": "Sets an attribute of sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_bufferSize", "head_type": "__host__", "description": "Computes size for the external buffer of SpSV.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_analysis", "head_type": "__host__", "description": "Analyzes sparse matrix structure for solving.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_solve", "head_type": "__host__", "description": "Executes SpSV solve.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_destroyDescr", "head_type": "__host__", "description": "Destroys SpSV descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys cuSPARSE context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseGetErrorString", "head_type": "__host__", "description": "Returns a string type for error details.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/axpby/axpby_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocate device memory", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copy memory between host and device", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Free device memory", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Create a CUSPARSE library handle", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__host__", "description": "Create sparse vector descriptor", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Create dense vector descriptor", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseAxpby", "head_type": "__host__", "description": "Perform sparse vector axpby operation", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__host__", "description": "Destroy sparse vector descriptor", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroy dense vector descriptor", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroy a CUSPARSE library handle", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spsv_coo/spsv_coo_example.c", "model_response": [{"head": "CHECK_CUDA", "head_type": "__host__", "description": "Checks the CUDA function's execution status.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "CHECK_CUDA", "head_type": "__host__", "description": "Checks the CUDA function's execution status.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "CHECK_CUDA", "head_type": "__host__", "description": "Checks the CUDA function's execution status.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseCreate", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseCreateCoo", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseCreateDnVec", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseSpSV_createDescr", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseSpMatSetAttribute", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseSpSV_bufferSize", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseSpSV_analysis", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseSpSV_solve", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseDestroySpMat", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseDestroyDnVec", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseSpSV_destroyDescr", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "Checks the cuSPARSE function's execution status.", "relation": "calls", "tail": "cusparseDestroy", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/compression/compression_example.cpp", "model_response": [{"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemGetAllocationGranularity", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemAddressReserve", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemCreate", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemMap", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemGetAllocationPropertiesFromHandle", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemSetAccess", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemUnmap", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemAddressFree", "tail_type": "CUDA_API"}, {"head": "drvMemory", "head_type": "CUDA_CLASS", "description": "drvMemory class handles memory using CUDA Driver API.", "relation": "calls", "tail": "cuMemRelease", "tail_type": "CUDA_API"}, {"head": "cudaMemory", "head_type": "CUDA_CLASS", "description": "cudaMemory class handles memory using CUDA Runtime API.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "cudaMemory", "head_type": "CUDA_CLASS", "description": "cudaMemory class handles memory using CUDA Runtime API.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "cudaMemory", "head_type": "CUDA_CLASS", "description": "cudaMemory class handles memory using CUDA Runtime API.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseCreate", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseCreateSpVec", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseCreateDnVec", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseAxpby", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cudaDeviceSynchronize", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cudaEventCreate", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cudaEventRecord", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cudaEventSynchronize", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cudaEventElapsedTime", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cudaEventDestroy", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseDestroySpVec", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseDestroyDnVec", "tail_type": "CUDA_API"}, {"head": "benchmark", "head_type": "__host__", "description": "benchmark function evaluates the performance of CUDA operations.", "relation": "calls", "tail": "cusparseDestroy", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/graph_capture/graph_capture_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__global__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__global__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaEventCreate", "head_type": "__global__", "description": "Creates CUDA event.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaEventRecord", "head_type": "__global__", "description": "Records an event.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaEventSynchronize", "head_type": "__global__", "description": "Waits for an event to be completed.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaEventElapsedTime", "head_type": "__global__", "description": "Computes elapsed time between two events.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__global__", "description": "Creates CUSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__global__", "description": "Creates a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__global__", "description": "Creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpVV_bufferSize", "head_type": "__global__", "description": "Determines buffer size for SpVV operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpVV", "head_type": "__global__", "description": "Executes sparse vector-dense vector multiply.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaStreamCreate", "head_type": "__global__", "description": "Creates a CUDA stream.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSetStream", "head_type": "__global__", "description": "Sets a stream for CUSPARSE operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaStreamBeginCapture", "head_type": "__global__", "description": "Begins stream capture for graph generation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaStreamEndCapture", "head_type": "__global__", "description": "Ends stream capture and creates a graph.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaDeviceSynchronize", "head_type": "__global__", "description": "Blocks until the device has completed.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaGetLastError", "head_type": "__global__", "description": "Returns the last error from the runtime.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaGraphInstantiateWithFlags", "head_type": "__global__", "description": "Instantiates a graph with execution parameters.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaGraphLaunch", "head_type": "__global__", "description": "Launches an executable graph.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaEventDestroy", "head_type": "__global__", "description": "Destroys a CUDA event.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaGraphExecDestroy", "head_type": "__global__", "description": "Destroys a graph exec instance.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaGraphDestroy", "head_type": "__global__", "description": "Destroys a graph.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaStreamDestroy", "head_type": "__global__", "description": "Destroys a CUDA stream.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__global__", "description": "Destroys a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__global__", "description": "Destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__global__", "description": "Destroys CUSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__global__", "description": "Frees device memory.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/rot/rot_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__host__", "description": "Creates a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseRot", "head_type": "__host__", "description": "Executes a plane rotation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__host__", "description": "Destroys a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/dense2sparse_blockedell/dense2sparse_blockedell_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory space allocated on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a handle for cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateBlockedEll", "head_type": "__host__", "description": "Creates a sparse matrix in Blocked ELL format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDenseToSparse_bufferSize", "head_type": "__host__", "description": "Determines the size of the external buffer for dense to sparse conversion.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDenseToSparse_analysis", "head_type": "__host__", "description": "Analyzes the input dense matrix for sparse conversion.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDenseToSparse_convert", "head_type": "__host__", "description": "Performs the dense to sparse matrix conversion.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the library context handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmv_sell/spmv_sell_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Initializes a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSlicedEll", "head_type": "__host__", "description": "Creates a sparse matrix in SELL format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMV", "head_type": "__host__", "description": "Performs sparse matrix-vector multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/coosort/coosort_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocate memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copy data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Create a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__host__", "description": "Create a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Create a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseXcoosort_bufferSizeExt", "head_type": "__host__", "description": "Query bufferSize for COO sorting.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateIdentityPermutation", "head_type": "__host__", "description": "Generate an identity permutation vector.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseXcoosortByRow", "head_type": "__host__", "description": "Sort a sparse matrix in COO format by row.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseGather", "head_type": "__host__", "description": "Gather dense values using a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__host__", "description": "Destroy a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroy a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroy the cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Free memory on the device.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spsv_sell/spsv_sell_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a CUSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSlicedEll", "head_type": "__host__", "description": "Creates a sparse matrix in sliced ELLPACK format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_createDescr", "head_type": "__host__", "description": "Creates a descriptor for sparse-matrix vector operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMatSetAttribute", "head_type": "__host__", "description": "Sets attributes for a sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_bufferSize", "head_type": "__host__", "description": "Calculates buffer size for sparse-matrix vector operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_analysis", "head_type": "__host__", "description": "Analyzes sparse-matrix vector operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_solve", "head_type": "__host__", "description": "Solves sparse-matrix vector operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpSV_destroyDescr", "head_type": "__host__", "description": "Destroys a sparse-matrix vector operation descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the CUSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmv_csr/spmv_csr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the GPU.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the GPU.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMV_bufferSize", "head_type": "__host__", "description": "Determines buffer size required for cusparseSpMV.", "relation": "calls", "tail": "cusparseSpMV", "tail_type": "CUDA_API"}, {"head": "cusparseSpMV_preprocess", "head_type": "__host__", "description": "Performs optional preprocessing for cusparseSpMV operations.", "relation": "calls", "tail": "cusparseSpMV", "tail_type": "CUDA_API"}, {"head": "cusparseSpMV", "head_type": "__host__", "description": "Computes sparse matrix-vector multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/dense2sparse_csr/dense2sparse_csr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "CUDA_API", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "CUDA_API", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "CUDA_API", "description": "Creates a cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "CUDA_API", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "CUDA_API", "description": "Creates a sparse matrix descriptor in CSR format.", "relation": "calls", "tail": "cusparseSpMatDescr_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseDenseToSparse_bufferSize", "head_type": "CUDA_API", "description": "Determines the buffer size required for dense-to-sparse conversion.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDenseToSparse_analysis", "head_type": "CUDA_API", "description": "Performs analysis for dense-to-sparse conversion.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMatGetSize", "head_type": "CUDA_API", "description": "Gets the dimension sizes and number of non-zero elements of a sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCsrSetPointers", "head_type": "CUDA_API", "description": "Sets the CSR format pointers for a sparse matrix.", "relation": "calls", "tail": "cusparseSpMatDescr_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseDenseToSparse_convert", "head_type": "CUDA_API", "description": "Converts from dense to sparse matrix format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "CUDA_API", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "CUDA_API", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "CUDA_API", "description": "Destroys the cuSPARSE library handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "CUDA_API", "description": "Deallocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/gather/gather_example.c", "model_response": [{"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateSpVec", "head_type": "__host__", "description": "Creates a sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnVec", "head_type": "__host__", "description": "Creates a dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseGather", "head_type": "__host__", "description": "Executes gather operation using cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpVec", "head_type": "__host__", "description": "Destroys the sparse vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnVec", "head_type": "__host__", "description": "Destroys the dense vector descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "calls", "tail": "cudaRuntimeAPI", "tail_type": "CUDA_API"}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "calls", "tail": "cudaRuntimeAPI", "tail_type": "CUDA_API"}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "calls", "tail": "cudaRuntimeAPI", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/sddmm_bsr/sddmm_bsr_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "calls", "tail": "cudaError_t", "tail_type": "CUDA_API"}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "calls", "tail": "cudaError_t", "tail_type": "CUDA_API"}, {"head": "cudaGetErrorString", "head_type": "__host__", "description": "Returns a string for the error code.", "relation": "calls", "tail": "cudaError_t", "tail_type": "CUDA_API"}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "calls", "tail": "cudaError_t", "tail_type": "CUDA_API"}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateBsr", "head_type": "__host__", "description": "Creates a sparse matrix descriptor in BSR format.", "relation": "calls", "tail": "CUSPARSE_INDEX_BASE_ZERO", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSDDMM_bufferSize", "head_type": "__host__", "description": "Calculates buffer size for Sparse-Dense matrix multiplication.", "relation": "calls", "tail": "CUSPARSE_SDDMM_ALG_DEFAULT", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSDDMM_preprocess", "head_type": "__host__", "description": "Prepares data structures for the Sparse-Dense matrix multiplication.", "relation": "calls", "tail": "CUSPARSE_SDDMM_ALG_DEFAULT", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSDDMM", "head_type": "__host__", "description": "Performs Sparse-Dense matrix multiplication.", "relation": "calls", "tail": "CUSPARSE_SDDMM_ALG_DEFAULT", "tail_type": "CUDA_CLASS"}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE handle.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmm_csr_batched/spmm_csr_batched_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCsrSetStridedBatch", "head_type": "__host__", "description": "Sets the strided batch parameters for CSR formatted sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDnMatSetStridedBatch", "head_type": "__host__", "description": "Sets the strided batch parameters for dense matrices.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMM_bufferSize", "head_type": "__host__", "description": "Calculates the buffer size needed for SpMM operation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMM", "head_type": "__host__", "description": "Executes the sparse matrix-matrix multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys the cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmm_csr_op/spmm_csr_op_example.c", "model_response": [{"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcCreateProgram", "tail_type": "CUDA_API"}, {"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcCompileProgram", "tail_type": "CUDA_API"}, {"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcGetProgramLogSize", "tail_type": "CUDA_API"}, {"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcGetProgramLog", "tail_type": "CUDA_API"}, {"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcDestroyProgram", "tail_type": "CUDA_API"}, {"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcGetLTOIRSize", "tail_type": "CUDA_API"}, {"head": "nvrtc_compile", "head_type": "__host__", "description": "The nvrtc_compile function is responsible for compiling CUDA code via NVRTC.", "relation": "calls", "tail": "nvrtcGetLTOIR", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spgemm_reuse/spgemm_reuse_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemset", "head_type": "__host__", "description": "Initializes or sets device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees allocated device memory.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCsr", "head_type": "__host__", "description": "Creates a sparse matrix in CSR format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_createDescr", "head_type": "__host__", "description": "Creates a descriptor for SpGEMM operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMMreuse_workEstimation", "head_type": "__host__", "description": "Estimates the buffer size required for SpGEMM computations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMMreuse_nnz", "head_type": "__host__", "description": "Computes the number of non-zero elements for the result matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMatGetSize", "head_type": "__host__", "description": "Gets the size properties of a sparse matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCsrSetPointers", "head_type": "__host__", "description": "Sets the pointers for a CSR matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMMreuse_copy", "head_type": "__host__", "description": "Copies data for SpGEMM computations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMMreuse_compute", "head_type": "__host__", "description": "Performs the SpGEMM computation.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpGEMM_destroyDescr", "head_type": "__host__", "description": "Destroys the descriptor for SpGEMM operations.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmm_blockedell/spmm_blockedell_example.cpp", "model_response": [{"head": "cudaGetDeviceProperties", "head_type": "__host__", "description": "Retrieves properties of a CUDA device.", "relation": "calls", "tail": "cudaDeviceProp", "tail_type": "CUDA_CLASS"}, {"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between the host and device.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE handle.", "relation": "calls", "tail": "cusparseHandle_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseCreateBlockedEll", "head_type": "__host__", "description": "Creates a sparse matrix descriptor in blocked ELL format.", "relation": "calls", "tail": "cusparseSpMatDescr_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix descriptor.", "relation": "calls", "tail": "cusparseDnMatDescr_t", "tail_type": "CUDA_CLASS"}, {"head": "cusparseSpMM_bufferSize", "head_type": "__host__", "description": "Calculates buffer size needed for sparse matrix multiplication.", "relation": "calls", "tail": "cusparseSpMM", "tail_type": "CUDA_API"}, {"head": "cusparseSpMM", "head_type": "__host__", "description": "Performs sparse matrix multiplication.", "relation": "calls", "tail": "cusparseSpMM_bufferSize", "tail_type": "CUDA_API"}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "calls", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "calls", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE handle.", "relation": "calls", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "calls", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/spmm_coo_batched/spmm_coo_batched_example.c", "model_response": [{"head": "cudaMalloc", "head_type": "__host__", "description": "Allocates memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaMemcpy", "head_type": "__host__", "description": "Copies data between host and device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cudaFree", "head_type": "__host__", "description": "Frees memory on the device.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreate", "head_type": "__host__", "description": "Creates a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateCoo", "head_type": "__host__", "description": "Creates a sparse matrix in COO format.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCooSetStridedBatch", "head_type": "__host__", "description": "Sets strided batch parameters for a sparse COO matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseCreateDnMat", "head_type": "__host__", "description": "Creates a dense matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDnMatSetStridedBatch", "head_type": "__host__", "description": "Sets strided batch parameters for a dense matrix.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMM_bufferSize", "head_type": "__host__", "description": "Computes the size of buffer needed for cusparseSpMM.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseSpMM", "head_type": "__host__", "description": "Executes the sparse matrix-matrix multiplication.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroySpMat", "head_type": "__host__", "description": "Destroys a sparse matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroyDnMat", "head_type": "__host__", "description": "Destroys a dense matrix descriptor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "cusparseDestroy", "head_type": "__host__", "description": "Destroys a cuSPARSE library context.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuSPARSE/gpsvInterleavedBatch/gpsvInterleavedBatch_example.c", "model_response": [{"head": "residual_eval", "head_type": "__host__", "description": "Calculates the residual norm of a given matrix and vector.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "CHECK_CUDA", "head_type": "__host__", "description": "A macro that checks CUDA API calls for errors.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "CHECK_CUDA", "head_type": "__host__", "description": "A macro that checks CUDA API calls for errors.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "CHECK_CUDA", "head_type": "__host__", "description": "A macro that checks CUDA API calls for errors.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "A macro that checks cuSPARSE API calls for errors.", "relation": "calls", "tail": "cusparseCreate", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "A macro that checks cuSPARSE API calls for errors.", "relation": "calls", "tail": "cusparseSgpsvInterleavedBatch_bufferSizeExt", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "A macro that checks cuSPARSE API calls for errors.", "relation": "calls", "tail": "cusparseSgpsvInterleavedBatch", "tail_type": "CUDA_API"}, {"head": "CHECK_CUSPARSE", "head_type": "__host__", "description": "A macro that checks cuSPARSE API calls for errors.", "relation": "calls", "tail": "cusparseDestroy", "tail_type": "CUDA_API"}, {"head": "CHECK_CUBLAS", "head_type": "__host__", "description": "A macro that checks cuBLAS API calls for errors.", "relation": "calls", "tail": "cublasCreate", "tail_type": "CUDA_API"}, {"head": "CHECK_CUBLAS", "head_type": "__host__", "description": "A macro that checks cuBLAS API calls for errors.", "relation": "calls", "tail": "cublasSgeam", "tail_type": "CUDA_API"}, {"head": "CHECK_CUBLAS", "head_type": "__host__", "description": "A macro that checks cuBLAS API calls for errors.", "relation": "calls", "tail": "cublasDestroy", "tail_type": "CUDA_API"}]}
