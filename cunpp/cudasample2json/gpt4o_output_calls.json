{"cu_path": "../CUDALibrarySamples/NPP/batchedLabelMarkersAndCompression/batchedLabelMarkersAndCompression.cpp", "model_response": [{"head": "tearDown", "head_type": "__host__", "description": "This function cleans up and frees allocated device and host memory resources used throughout the application.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaMemcpy2DAsync", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaStreamSynchronize", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaDeviceGetAttribute", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaGetDevice", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaStreamGetFlags", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaGetDeviceProperties", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "cudaMemcpyAsync", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "nppGetLibVersion", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "nppiLabelMarkersUF_8u32u_C1R_Ctx", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "nppiCompressMarkerLabelsUF_32u_C1IR", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "nppiLabelMarkersUFBatch_8u32u_C1R_Advanced_Ctx", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "This is the main function which initializes contexts, loads images, and performs label markers and compression using NPP functions.", "relation": "calls", "tail": "nppiCompressMarkerLabelsUFBatch_32u_C1IR_Advanced_Ctx", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/NPP/distanceTransform/distanceTransform.cpp", "model_response": [{"head": "shutDown", "head_type": "__host__", "description": "Deallocate all allocated memory using CUDA API.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaMemcpy2DAsync", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaGetDevice", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaDeviceGetAttribute", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaStreamGetFlags", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaGetDeviceProperties", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaStreamSynchronize", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaDriverGetVersion", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaRuntimeGetVersion", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Primary control function for processing images using CUDA and NPP.", "relation": "calls", "tail": "cudaGetLastError", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/NPP/findContour/findContour.cpp", "model_response": [{"head": "nppiLabelMarkersUFGetBufferSize_32u_C1R", "head_type": "__host__", "description": "Get buffer size needed for label markers generation using union find algorithm.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "nppiLabelMarkersUF_8u32u_C1R_Ctx", "head_type": "__host__", "description": "Label markers generation using union find algorithm with stream context.", "relation": "calls", "tail": "cudaMemcpy2DAsync", "tail_type": "CUDA_API"}, {"head": "nppiLabelMarkersUF_8u32u_C1R_Ctx", "head_type": "__host__", "description": "Label markers generation using union find algorithm with stream context.", "relation": "calls", "tail": "nppStreamCtx", "tail_type": "CUDA_CLASS"}, {"head": "nppiCompressMarkerLabelsGetBufferSize_32u_C1R", "head_type": "__host__", "description": "Get buffer size needed for marker labels compression.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "nppiCompressMarkerLabelsUF_32u_C1IR_Ctx", "head_type": "__host__", "description": "Compress marker labels using union find algorithm with stream context.", "relation": "calls", "tail": "nppStreamCtx", "tail_type": "CUDA_CLASS"}, {"head": "nppiCompressedMarkerLabelsUFGetInfoListSize_32u_C1R", "head_type": "__host__", "description": "Get size of list required to store compressed marker label information.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "nppiCompressedMarkerLabelsUFInfo_32u_C1R_Ctx", "head_type": "__host__", "description": "Retrieve information about compressed marker labels with stream context.", "relation": "calls", "tail": "nppStreamCtx", "tail_type": "CUDA_CLASS"}, {"head": "nppiCompressedMarkerLabelsUFContoursGenerateGeometryLists_C1R_Ctx", "head_type": "__host__", "description": "Generate lists of contour geometry information for compressed marker labels with stream context.", "relation": "calls", "tail": "nppStreamCtx", "tail_type": "CUDA_CLASS"}, {"head": "nppiCompressedMarkerLabelsUFContoursOutputGeometryLists_C1R", "head_type": "__host__", "description": "Output ordered lists of contour geometry for compressed marker labels.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/NPP/watershedSegmentation/watershedSegmentation.cpp", "model_response": [{"head": "tearDown", "head_type": "__host__", "description": "Clean up and deallocate allocated memory for images.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "loadRaw8BitImage", "head_type": "__host__", "description": "Loads raw 8-bit image data from a file.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "findParamIndex", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaGetDevice", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaDriverGetVersion", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaRuntimeGetVersion", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaDeviceGetAttribute", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaStreamGetFlags", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaGetDeviceProperties", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "nppiSegmentWatershedGetBufferSize_8u_C1R", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaMemcpy2DAsync", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "nppiSegmentWatershed_8u_C1IR_Ctx", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "nppiCompressMarkerLabelsGetBufferSize_32u_C1R", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "nppiCompressMarkerLabelsUF_32u_C1IR", "tail_type": "CUDA_API"}, {"head": "main", "head_type": "__host__", "description": "Main function for watershed segmentation example using CUDA streams and NPP library.", "relation": "calls", "tail": "cudaStreamSynchronize", "tail_type": "CUDA_API"}]}
