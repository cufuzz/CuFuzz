3.3. nvJPEG Encoder Helper API Referenceï

The nvJPEG Encoder helper functions are used for initializing.


3.3.1. nvjpegEncoderStateCreate()ï

Creates encoder state that stores intermediate buffers used in compression.
Signature:

nvjpegStatus_t nvjpegEncoderStateCreate(
    nvjpegHandle_t handle,
    nvjpegEncoderState_t *encoder_state,
    cudaStream_t stream);


Parameters:









Parameter
Input / Output
Memory
Description


handle
Input
Host
Library handle


encoder_state
Output
Host
Pointer to the encoder state structure, where the new state will be placed.


stream
Inputt
Host
CUDA stream where all the required device operations will be placed.






3.3.2. nvjpegEncoderStateDestroy()ï

Destroys the encoder state.
Signature:

nvjpegStatus_t nvjpegEncoderStateDestroy(
    nvjpegEncoderState_t encoder_state);


Parameters:









Parameter
Input / Output
Memory
Description


encoder_state
Input/Output
Host
Encoder state structure that will be released.






3.3.3. nvjpegEncoderParamsCreate()ï

Creates the structure that holds the compression parameters.
Signature:

nvjpegStatus_t nvjpegEncoderParamsCreate(
    nvjpegHandle_t handle,
    nvjpegEncoderParams_t *encoder_params,
    cudaStream_t stream);


Parameters:









Parameter
Input / Output
Memory
Description


handle
Input
Host
Library handle.


encoder_params
Output
Host
Pointer to the location where the new parameters structure will be placed.


stream
Inputt
Host
CUDA stream where all the required device operations will be placed.






3.3.4. nvjpegEncoderParamsDestroy()ï

Destroys the encoder parameters structure.
Signature:

nvjpegEncoderParamsDestroy(
    nvjpegEncoderParams_t encoder_params);


Parameters:









Parameter
Input / Output
Memory
Description


encoder_params
Input/Output
Host
Encoder params structure that will be released.






3.3.5. nvjpegEncoderParamsSetEncoding()ï

Sets the parameter quality in the encoder parameters structure.
Signature:

nvjpegStatus_t nvjpegEncoderParamsSetEncoding(
    nvjpegEncoderParams_t encoder_params,
    nvjpegJpegEncoding_t etype,
    cudaStream_t stream);


Parameters:









Parameter
Input / Output
Memory
Description


encoder_params
Input/Output
Host
Encoder parameters structure handle.


etype
Input
Host
Encoding type selection (Baseline/Progressive). Default is Baseline.


stream
Input
Host
CUDA stream where all the required device operations will be placed.






3.3.6. nvjpegEncoderParamsSetQuality()ï

Sets the parameter quality in the encoder parameters structure.
Signature:

nvjpegStatus_t nvjpegEncoderParamsSetQuality(
    nvjpegEncoderParams_t encoder_params,
    const int quality,
    cudaStream_t stream);


Parameters:









Parameter
Input / Output
Memory
Description


encoder_params
Input/Output
Host
Encoder parameterss structure handle.


quality
Input
Host
Integer value of quality between 1 and 100, where 100 is the highest quality. Default value is 70.


stream
Input
Host
CUDA stream where all the required device operations will be placed.






3.3.7. nvjpegEncoderParamsSetOptimizedHuffman()ï

Sets whether or not to use optimized Huffman. Using optimized Huffman produces smaller JPEG bitstream sizes with the same quality, but with slower performance.
Signature:

nvjpegStatus_t nvjpegEncoderParamsSetOptimizedHuffman(
    nvjpegEncoderParams_t encoder_params,
    const int optimized,
    cudaStream_t stream);


Parameters:









Parameter
Input / Output
Memory
Description


encoder_params
Input/Output
Host
Encoder parameters structure handle.


optimized
Input
Host
If this value is 0 then non-optimized Huffman will be used. Otherwise optimized version will be used. Default value is 0.


stream
Input
Host
CUDA stream where all the required device operations will be placed.






3.3.8. nvjpegEncoderParamsSetSamplingFactors()ï

Sets which chroma subsampling will be used for JPEG compression.
Signature:

nvjpegStatus_t nvjpegEncoderParamsSetSamplingFactors(
    nvjpegEncoderParams_t encoder_params,
    const nvjpegChromaSubsampling_t chroma_subsampling,
    cudaStream_t stream);


Parameters:









Parameter
Input / Output
Memory
Description


encoder_params
Input/Output
Host
Encoder parameters structure handle.


chroma_subsampling
Input
Host
Chroma subsampling that will be used for JPEG compression. If the input is in YUV color model and chroma_subsampling is different from the subsampling factors of source image, then the NVJPEG library will convert subsampling to the value of chroma_subsampling. Default value is 4:4:4.


stream
Input
Host
CUDA stream where all the required device operations will be placed.