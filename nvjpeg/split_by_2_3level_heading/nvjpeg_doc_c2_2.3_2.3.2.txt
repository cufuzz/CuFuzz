2.3.2. Retrieve Encoded Image Information APIï

The helper functions for retrieving the encoded image information.


2.3.2.1. nvjpegGetImageInfo()ï

Decodes the JPEG header and retrieves the basic information about the image.
Signature:

nvjpegStatus_t nvjpegGetImageInfo(
    nvjpegHandle_t              handle,
    const unsigned char         *data,
    size_t                      length,
    int                         *nComponents,
    nvjpegChromaSubsampling_t   *subsampling,
    int                         *widths,
    int                         *heights);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegHandle_t handle
Input
Host
The library handle.


const unsigned char *data
Input
Host
Pointer to the encoded data.


size_t length
Input
Host
Size of the encoded data in bytes.


int *nComponents
Output
Host
Number of channels in the jpeg encoded data.


nvjpegChromaSubsampling_t *subsampling
Output
Host
Chroma subsampling for the 1- or 3- channel encoding.


int *widths
Output
Host
Pointer to the first element of array of size NVJPEG_MAX_COMPONENT, where the width of each channel (up to NVJPEG_MAX_COMPONENT) will be saved. If the channel is not encoded, then the corresponding value would be zero.


int *heights
Output
Host
Pointer to the first element of array of size NVJPEG_MAX_COMPONENT, where the height of each channel (up to NVJPEG_MAX_COMPONENT) will be saved. If the channel is not encoded, then the corresponding value would be zero.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2. nvJPEG Stream APIï

These functions store the parsed bit-stream data on the host.


2.3.2.2.1. nvjpegJpegStreamParse()ï

Parses the bitstream and stores the metadata in thejpeg_stream struct.
Signature:

nvjpegStatus_t nvjpegJpegStreamParse(
    nvjpegHandle_t handle,
    const unsigned char *data,
    size_t length,
    int save_metadata,
    int save_stream,
    nvjpegJpegStream_t jpeg_stream);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegHandle_t handle
Input
Host
The library handle.


const unsigned char *data
Input
Host
Pointer to the bit-stream.


size_t length
Input
Host
Bit-stream size.


int save_metadata
Input
Host
(Not enabled. Marked for future use). If not 0, then the JPEG stream metadata (headers, app markers, etc.) will be saved in the internal JpegStream structure for future usage.
If 0, then the meta data (headers, app markerms etc.) will be discarded.


int save_stream
Input
Host
If not 0, then the whole jpeg stream will be copied to the internal JpegStream structure, and the pointer to the JPEG file data will not be needed after this call.
If 0, then JpegStream will just save the pointers (to JPEG file data), and these pointers will be used later during the image decoding.


nvjpegJpegStream_t jpeg_stream
Input/Output
Host/Device
The nvJPEG bitstream handle that stores the parsed bitstream information.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.2. nvjpegJpegStreamParseHeader()ï

Parses only the header of the bit-stream and stores the header information in thejpeg_stream struct.
Signature:

nvjpegStatus_t nvjpegJpegStreamParseHeader(
    nvjpegHandle_t handle,
    const unsigned char *data,
    size_t length,
    nvjpegJpegStream_t jpeg_stream);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegHandle_t handle
Input
Host
The library handle.


const unsigned char *data
Input
Host
Pointer to the bit-stream.


size_t length
Input
Host
Bit-stream size.


nvjpegJpegStream_t jpeg_stream
Input/Output
Host/Device
The nvJPEG bitstream handle that stores the parsed bitstream information.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.3. nvjpegJpegStreamParseTables()ï

To be used when decoding TIFF files with JPEG compression. Parses the JPEG tables bitstream and stores the jpeg tables in jpeg_stream
Signature:

nvjpegStatus_t nvjpegJpegStreamParseHeader(
    nvjpegHandle_t handle,
    const unsigned char *data,
    size_t length,
    nvjpegJpegStream_t jpeg_stream);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegHandle_t handle
Input
Host
The library handle.


const unsigned char *data
Input
Host
Pointer to the JPEG tables bitstream. Can be set to NULL to reset the JPEG tables.


size_t length
Input
Host
JPEG tables bitstream size.


nvjpegJpegStream_t jpeg_stream
Input/Output
Host
The nvJPEG bitstream handle that stores the parsed bitstream information.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.4. nvjpegJpegStreamGetFrameDimensions()ï

Extracts the JPEG frame dimensions from the bitstream.
Signature:

nvjpegStatus_t nvjpegJpegStreamGetFrameDimensions(
    nvjpegJpegStream_t jpeg_stream,
    unsigned int* width,
    unsigned int* height);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegJpegStream_t jpeg_stream
Input
Host
Bitstream handle.


unsigned int* width
Output
Host
Frame height.


unsigned int* height
Output
Host
Frame width.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.5. nvjpegJpegStreamGetComponentsNum()ï

Extracts the JPEG frame dimensions from the bitstream.
Signature:

nvjpegStatus_t nvjpegJpegStreamGetComponentsNum(
    nvjpegJpegStream_t jpeg_stream,
    unsigned int* components_num);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegJpegStream_t jpeg_stream
Input
Host
Bitstream handle.


unsigned int* components_num
Output
Host
Number of encoded channels in the input.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.6. nvjpegJpegStreamGetComponentDimensions()ï

Extracts the component dimensions from the bitstream.
Signature:

nvjpegStatus_t nvjpegJpegStreamGetComponentDimensions(
    nvjpegJpegStream_t jpeg_stream,
    unsigned int component,
    unsigned int* width,
    unsigned int* height)


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegJpegStream_t jpeg_stream
Input
Host
Bitstream handle.


unsigned int component
Input
Host
Component index.


unsigned int* width
Output
Host
Component height.


unsigned int* height
Output
Host
Component width.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.7. nvjpegJpegStreamGetChromaSubsampling()ï

Gets the chroma subsampling from the jpeg_stream. For grayscale (single channel) images it returns NVJPEG_CSS_GRAY. For 3-channel images it tries to assign one of the known chroma sub-sampling values based on the sampling information present in the bitstream, else it returns NVJPEG_CSS_UNKNOWN. If the number of channels is 2 or 4, then it returns NVJPEG_CSS_UNKNOWN.
Signature:

nvjpegStatus_t nvjpegJpegStreamGetChromaSubsampling(
    nvjpegJpegStream_t jpeg_stream,
    nvjpegChromaSubsampling_t* chroma_subsampling);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegJpegStream_t jpeg_stream
Input
Host
Bitstream handle.


nvjpegChromaSubsampling_t* chroma_subsampling
Output
Host
Chroma subsampling for the 1- or 3- channel encoding.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.8. nvjpegJpegStreamGetJpegEncoding()ï

This function obtains the JPEG encoding type from the jpeg_stream. For baseline images it returns NVJPEG_ENCODING_BASELINE_DCT. For progressive images it returns NVJPEG_ENCODING_PROGRESSIVE_DCT_HUFFMAN.
Signature:

nvjpegStatus_t nvjpegJpegStreamGetJpegEncoding(
    nvjpegJpegStream_t jpeg_stream,
    nvjpegJpegEncoding_t* jpeg_encoding);


Parameters:









Parameter
Input / Output
Memory
Description


jpeg_stream
In
Host
Input bitstream handle.


jpeg_encoding
Out
Host
Encoding type obtainedâbaseline or progressive.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.9. nvjpegJpegStreamGetExifOrientation()ï

Extracts the exif orientation from the bitstream. Returns NVJPEG_ORIENTATION_UNKNOWN if the exif marker/orientation information is not present.
Signature:

nvjpegStatus_t NVJPEGAPI nvjpegJpegStreamGetExifOrientation(
    nvjpegJpegStream_t jpeg_stream,
    nvjpegExifOrientation_t *orientation_flag);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegJpegStream_t jpeg_stream
Input
Host
Bitstream handle.


nvjpegExifOrientation_t *orientation_flag
Output
Host
Exif orientation in JPEG stream.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.



2.3.2.2.10. nvjpegJpegStreamGetSamplePrecision()ï

Extracts the sample precision(bit depth) from the bitstream.
Signature:

nvjpegStatus_t NVJPEGAPI nvjpegJpegStreamGetSamplePrecision(
  nvjpegJpegStream_t jpeg_stream,
  unsigned int *precision);


Parameters:









Parameter
Input / Output
Memory
Description


nvjpegJpegStream_t jpeg_stream
Input
Host
Bitstream handle.


unsigned int *precision
Output
Host
Sample precision value.



Returns:
nvjpegStatus_t â An error code as specified in nvJPEG API Return Codes.