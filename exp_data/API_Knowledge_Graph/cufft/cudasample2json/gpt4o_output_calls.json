{"cu_path": "../CUDALibrarySamples/cuFFT/1d_mgpu_c2c/1d_mgpu_c2c_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "scales complex data by a given factor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cufftMakePlan1d", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cufftXtExec", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "executes cuFFT plan on a single GPU.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cudaStreamCreate", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftSetStream", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftXtSetGPUs", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftMakePlan1d", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftXtMalloc", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftXtMemcpy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftXtExecDescriptor", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftXtFree", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "executes multi-GPU cuFFT plan with stream handling.", "relation": "calls", "tail": "cudaStreamDestroy", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuFFT/3d_mgpu_r2c_c2r/3d_mgpu_r2c_c2r_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "The scaling_kernel performs scaling on complex CUDA data in parallel.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "scaleComplex", "head_type": "__host__", "description": "The scaleComplex function scales complex data across multiple GPUs.", "relation": "calls", "tail": "cudaSetDevice", "tail_type": "CUDA_API"}, {"head": "scaleComplex", "head_type": "__host__", "description": "The scaleComplex function scales complex data across multiple GPUs.", "relation": "calls", "tail": "scaling_kernel", "tail_type": "__global__"}, {"head": "scaleComplex", "head_type": "__host__", "description": "The scaleComplex function scales complex data across multiple GPUs.", "relation": "calls", "tail": "cudaDeviceSynchronize", "tail_type": "CUDA_API"}, {"head": "fill_array", "head_type": "__host__", "description": "The fill_array function fills CPU data with random complex numbers.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cufftMakePlan3d", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cufftXtExec", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "scaling_kernel", "tail_type": "__global__"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "The single function performs FFT plan execution on a single GPU.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cudaStreamCreate", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftSetStream", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftXtSetGPUs", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftMakePlan3d", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftXtMalloc", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftXtMemcpy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftXtExecDescriptor", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "scaleComplex", "tail_type": "__host__"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftXtFree", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "The spmg function performs FFT plan execution on multiple GPUs.", "relation": "calls", "tail": "cudaStreamDestroy", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuFFT/3d_mgpu_c2c/3d_mgpu_c2c_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "Kernel to apply scaling to elements of cufftComplex data.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cufftMakePlan3d", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cudaMemcpy", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cufftXtExec", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "single", "head_type": "__host__", "description": "Reference implementation of single GPU cuFFT plan.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cudaStreamCreate", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftSetStream", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftXtSetGPUs", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftMakePlan3d", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftXtMalloc", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftXtMemcpy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftXtExecDescriptor", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftXtFree", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "spmg", "head_type": "__host__", "description": "Multi-GPU version of cuFFT plan using cufftSetStream.", "relation": "calls", "tail": "cudaStreamDestroy", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuFFT/2d_c2r_r2c/2d_c2r_r2c_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "A CUDA global function used for scaling complex data by a defined scale factor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "CUDA_RT_CALL", "head_type": "__host__", "description": "A macro for CUDA runtime API error checking.", "relation": "calls", "tail": "cudaGetErrorString", "tail_type": "CUDA_API"}, {"head": "CUFFT_CALL", "head_type": "__host__", "description": "A macro for CUFFT API error checking.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuFFT/1d_c2c/1d_c2c_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "scaling_kernel is a CUDA kernel that scales each element of an array of cufftComplex numbers by a given scale factor.", "relation": "single", "tail": "", "tail_type": ""}, {"head": "CUFFT_CALL", "head_type": "CUDA_API", "description": "CUFFT_CALL macro is used to check for errors in cufft API calls.", "relation": "calls", "tail": "cufftCreate", "tail_type": "CUDA_API"}, {"head": "CUFFT_CALL", "head_type": "CUDA_API", "description": "CUFFT_CALL macro is used to check for errors in cufft API calls.", "relation": "calls", "tail": "cufftPlan1d", "tail_type": "CUDA_API"}, {"head": "CUFFT_CALL", "head_type": "CUDA_API", "description": "CUFFT_CALL macro is used to check for errors in cufft API calls.", "relation": "calls", "tail": "cufftSetStream", "tail_type": "CUDA_API"}, {"head": "CUFFT_CALL", "head_type": "CUDA_API", "description": "CUFFT_CALL macro is used to check for errors in cufft API calls.", "relation": "calls", "tail": "cufftExecC2C", "tail_type": "CUDA_API"}, {"head": "CUFFT_CALL", "head_type": "CUDA_API", "description": "CUFFT_CALL macro is used to check for errors in cufft API calls.", "relation": "calls", "tail": "cufftDestroy", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaStreamCreateWithFlags", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaMalloc", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaMemcpyAsync", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaStreamSynchronize", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaFree", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaStreamDestroy", "tail_type": "CUDA_API"}, {"head": "CUDA_RT_CALL", "head_type": "CUDA_API", "description": "CUDA_RT_CALL macro is used to check for errors in CUDA Runtime API calls.", "relation": "calls", "tail": "cudaDeviceReset", "tail_type": "CUDA_API"}]}
{"cu_path": "../CUDALibrarySamples/cuFFT/1d_r2c_c2r/1d_r2c_c2r_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "A CUDA kernel for scaling the elements of cufftComplex data by a given scale factor.", "relation": "single", "tail": "", "tail_type": ""}]}
{"cu_path": "../CUDALibrarySamples/cuFFT/3d_c2c/3d_c2c_example.cpp", "model_response": [{"head": "scaling_kernel", "head_type": "__global__", "description": "The scaling_kernel function scales the elements of the data array by a given factor.", "relation": "single", "tail": "", "tail_type": ""}]}
